/*
 * Created on 2022-05-06 ( 17:51:47 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package backend.backend.persitence.entities;

import java.io.Serializable;

import java.util.List;
import javax.persistence.*;

/**
 * JPA entity class for "Product"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name = "Product", schema = "dbo", catalog = "shop")
public class Product implements Serializable {

    private static final long serialVersionUID = 1L;

    // --- ENTITY PRIMARY KEY
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_product", nullable = false)
    private Integer idProduct;

    // --- ENTITY DATA FIELDS
    @Column(name = "id_single_product_page")
    private Integer idSingleProductPage;

    @Column(name = "name", length = 2147483647)
    private String name;

    @Column(name = "quantity")
    private Integer quantity;

    @Column(name = "sold_count")
    private Integer soldCount;

    @Column(name = "price")
    private Double price;

    @Column(name = "img_url", length = 2147483647)
    private String imgUrl;

    // --- ENTITY LINKS ( RELATIONSHIP )
    @ManyToMany(mappedBy = "listOfProduct")
    private List<Promote> listOfPromote;

    @OneToMany(mappedBy = "product")
    private List<CartItem> listOfCartItem;

    @ManyToOne
    @JoinColumn(name = "id_single_product_page", referencedColumnName = "id_single_product_page", insertable = false, updatable = false)
    private SingleProductPage singleProductPage;

    @OneToMany(mappedBy = "product")
    private List<OrderItem> listOfOrderItem;

    @OneToMany(mappedBy = "product")
    private List<ChatLine> listOfChatLine;

    /**
     * Constructor
     */
    public Product() {
        super();
    }

    // --- GETTERS & SETTERS FOR FIELDS
    public void setSingleProductPage(SingleProductPage singleProductPage) {
        this.singleProductPage = singleProductPage;
    }

    public void setIdProduct(Integer idProduct) {
        this.idProduct = idProduct;
    }

    public Integer getIdProduct() {
        return this.idProduct;
    }

    public void setIdSingleProductPage(Integer idSingleProductPage) {
        this.idSingleProductPage = idSingleProductPage;
    }

    public Integer getIdSingleProductPage() {
        return this.idSingleProductPage;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setSoldCount(Integer soldCount) {
        this.soldCount = soldCount;
    }

    public Integer getSoldCount() {
        return this.soldCount;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Double getPrice() {
        return this.price;
    }

    public void setImgUrl(String imgUrl) {
        this.imgUrl = imgUrl;
    }

    public String getImgUrl() {
        return this.imgUrl;
    }

    // --- GETTERS FOR LINKS
    public List<Promote> getListOfPromote() {
        return this.listOfPromote;
    }

    public List<CartItem> getListOfCartItem() {
        return this.listOfCartItem;
    }

    public SingleProductPage getSingleProductPage() {
        return this.singleProductPage;
    }

    public List<OrderItem> getListOfOrderItem() {
        return this.listOfOrderItem;
    }

    public List<ChatLine> getListOfChatLine() {
        return this.listOfChatLine;
    }

public Integer getIdShop() {
        return this.singleProductPage.getIdShop();
    }


    // --- toString specific method
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(idProduct);
        sb.append("|");
        sb.append(idSingleProductPage);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(quantity);
        sb.append("|");
        sb.append(soldCount);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(imgUrl);
        return sb.toString();
    }

}
